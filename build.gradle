plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
}

group = 'com.crazy.scientist'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    runtimeClasspath {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'org.json:json:20220320'
    implementation 'net.dv8tion:JDA:5.0.0-alpha.12'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    implementation 'io.github.cdimascio:dotenv-java:2.2.4'
    implementation 'club.minnced:discord-webhooks:0.8.2'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.2'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.h2database:h2:2.1.214'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from {
        configurations.runtimeClasspath.filter{ it.exists() }.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes(
                'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
                'Main-Class': 'com.crazy.scientist.crazyjavascientist.CrazyJavaScientistApplication'
        )
    }
}
